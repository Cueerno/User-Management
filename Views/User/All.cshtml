@model IEnumerable<task_4.Models.User>

@{
    Layout = "_Layout";
}

<div class="container mt-4">
    <div class="btn-toolbar mb-3 justify-content-center">
        <div class="btn-group">
            <button type="button" class="btn btn-outline-danger rounded-pill px-4 mx-2" onclick="massAction('block')">
                <i class="fas fa-ban"></i> Block
            </button>
            <button type="button" class="btn btn-outline-success rounded-pill px-4 mx-2" onclick="massAction('unblock')">
                <i class="fas fa-check"></i>
            </button>
            <button type="button" class="btn btn-outline-warning rounded-pill px-4 mx-2" onclick="massAction('delete')">
                <i class="fas fa-trash"></i>
            </button>
        </div>
    </div>

    <form id="massActionForm" class="p-3 shadow-sm bg-light rounded">
        @Html.AntiForgeryToken()
        <table class="table table-bordered table-hover align-middle">
            <thead class="table-dark text-white">
            <tr>
                <th class="text-center">
                    <input type="checkbox" id="select-all" class="form-check-input"/>
                </th>
                <th>Name</th>
                <th>Email</th>
                <th>Last Login</th>
                <th>Status</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var user in Model) {
                <tr>
                    <td class="text-center">
                        <input type="checkbox" class="user-checkbox form-check-input" value="@user.Id"/>
                    </td>
                    <td>@user.Name</td>
                    <td>@user.Email</td>
                    <td>@(user.LastLogin?.ToString("g") ?? "-")</td>
                    <td class="fw-bold @(user.IsBlocked ? "text-danger" : "text-success")">
                        @(user.IsBlocked ? "Blocked" : "Active")
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const selectAllCheckbox = document.getElementById('select-all');
            selectAllCheckbox.addEventListener('change', function () {
                const checkboxes = document.querySelectorAll('.user-checkbox');
                checkboxes.forEach(cb => cb.checked = this.checked);
            });
        });

        function massAction(action) {
            const selected = Array.from(document.querySelectorAll('.user-checkbox:checked')).map(cb => Number(cb.value));
            if (selected.length === 0) {
                alert("Select at least one user.");
                return;
            }

            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch('@Url.Action("MassAction", "User")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify({action: action, userIds: selected})
            })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);

                    if (data.redirectToHome) {
                        window.location.href = '@Url.Action("Index", "Home")'; // Перенаправление на главную
                    } else {
                        location.reload();
                    }
                })
                .catch(error => console.error('Error:', error));
        }
    </script>
}
